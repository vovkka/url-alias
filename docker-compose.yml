services:
  db:
    image: postgres:15-alpine
    container_name: url_alias_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER:-postgres} -d $${POSTGRES_DB:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: url_alias_web
    working_dir: /app
    command: ["--reload", "--reload-dir", "/app/src"]
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    environment:
      - PYTHONPATH=/app:/app/src
      - UV_PROJECT_ENVIRONMENT=/app/.venv-docker
    depends_on:
      db:
        condition: service_healthy

  migrate:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: url_alias_migrate
    command: ["uv", "run", "alembic", "upgrade", "head"]
    working_dir: /app
    volumes:
      - .:/app
    env_file:
      - ./.env
    environment:
      - PYTHONPATH=/app:/app/src
      - UV_PROJECT_ENVIRONMENT=/app/.venv-docker
    depends_on:
      db:
        condition: service_healthy

volumes:
  postgres_data:
    driver: local
